#!/bin/bash

WHOAMI=`whoami`
AWS_HOME="/home/${WHOAMI}/.aws"
AWS_CACHE="${AWS_HOME}/cli/cache"
CRED_TEMPLATE="${AWS_HOME}/template-credentials"
CURRENT_CRED="${AWS_HOME}/credentials"
CURRENT_CONFIG="${AWS_HOME}/config"
SSO_PROFILE=$1
ASSUME_ROLE_PROFILE=$2

OS=$(uname -s)
if [ "$OS" = "Darwin" ]; then
    CMD_SED='gsed'
else
    CMD_SED='sed'
fi

set -e

## Validations
if [ "$SSO_PROFILE" == '' ]
then
  echo "SSO profile not found";
  exit 1;
fi

## Login SSO
if ! aws sts get-caller-identity --output text --query 'Account' > /dev/null
then
    aws sso login --profile ${SSO_PROFILE}
fi

## Look for Production values
SHORT_ACCESS_KEY=`aws configure list | grep access_key | awk '{print $2;}' | tr -d '*'`

CRED_FILE=`grep -l ${SHORT_ACCESS_KEY} ${AWS_CACHE}/*`

ACCESS_PROD=`cat ${CRED_FILE} | jq -r '.Credentials.AccessKeyId'`
SECRET_PROD=`cat ${CRED_FILE} | jq -r '.Credentials.SecretAccessKey'`
TOKEN_PROD=`cat ${CRED_FILE} | jq -r '.Credentials.SessionToken'`

cp -a ${CRED_TEMPLATE} ${CURRENT_CRED}

sed -i "s|ACCESS_PROD|${ACCESS_PROD}|g" ${CURRENT_CRED}
sed -i "s|SECRET_PROD|${SECRET_PROD}|g" ${CURRENT_CRED}
sed -i "s|TOKEN_PROD|${TOKEN_PROD}|g" ${CURRENT_CRED}


## Initialise AssumeRole
if [ "$ASSUME_ROLE_PROFILE" == '']
then
  exit 0
fi

ROLE_USERID=`aws --profile lab sts get-caller-identity | jq -r '.UserId' | awk -F':' '{print $1;}'`

ROLE_FILE=`grep -l ${ROLE_USERID} ${AWS_CACHE}/*`

ACCESS_STG=`cat ${ROLE_FILE} | jq -r '.Credentials.AccessKeyId'`
SECRET_STG=`cat ${ROLE_FILE} | jq -r '.Credentials.SecretAccessKey'`
TOKEN_STG=`cat ${ROLE_FILE} | jq -r '.Credentials.SessionToken'`

sed -i "s|ACCESS_STG|${ACCESS_STG}|g" ${CURRENT_CRED}
sed -i "s|SECRET_STG|${SECRET_STG}|g" ${CURRENT_CRED}
sed -i "s|TOKEN_STG|${TOKEN_STG}|g" ${CURRENT_CRED}

